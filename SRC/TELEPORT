#library "TELEPORT.acs"

#include "zcommon.acs"

int aoff[64];
int poff[64];
bool nooff[64];

script "Fwoosh Handler" ENTER
{
	int buttons;
	int oldbuttons;
	
	int cooldown;
	
	int a;
	int count;
	
	int velx;
	int vely;
	int velz;

	while(GetActorProperty(0, APROP_Health) > 0 && checkinventory("IsSorcerer") == 1)
	{
		buttons = GetPlayerInput(-1, INPUT_BUTTONS);
		oldbuttons = GetPlayerInput(-1, INPUT_OLDBUTTONS);
		
		if(((buttons & BT_SPEED) && cooldown <= 0) || count > 0)
		{
			if(count == -1)
			{
				count = 20;
				SetActorProperty(0, APROP_RenderStyle, STYLE_Translucent);
				SetPlayerProperty(0, 1, PROP_FROZEN);
				GiveInventory("SpectralON", 1);
				
				velx = GetActorVelX(0);
				vely = GetActorVelY(0);
				velz = GetActorVelZ(0);
			}
			
			if(count > 12)
			{	
				SetActorProperty(0, APROP_Alpha, GetActorProperty(0, APROP_Alpha) - 0.125);
				
				if (buttons & (BT_FORWARD|BT_BACK|BT_MOVELEFT|BT_MOVERIGHT))
				{
					a = GetActorAngle(0);
					nooff[PlayerNumber()] = FALSE;
					
					if (buttons & BT_MOVELEFT && buttons & BT_FORWARD)
						aoff[PlayerNumber()] = 0.125;
					else if (buttons & BT_MOVELEFT && buttons & BT_BACK)
						aoff[PlayerNumber()] = 0.375;
					else if (buttons & BT_MOVERIGHT && buttons & BT_BACK)
						aoff[PlayerNumber()] = 0.625;
					else if (buttons & BT_MOVERIGHT && buttons & BT_FORWARD)
						aoff[PlayerNumber()] = 0.875;
					else if (buttons & BT_FORWARD)
						aoff[PlayerNumber()] = 0;
					else if (buttons & BT_MOVELEFT)
						aoff[PlayerNumber()] = 0.25;
					else if (buttons & BT_BACK)
						aoff[PlayerNumber()] = 0.5;
					else if (buttons & BT_MOVERIGHT)
						aoff[PlayerNumber()] = 0.75;
					
					if (buttons & (BT_JUMP | BT_MOVEUP))
						poff[PlayerNumber()] = 0.125;
					else if (buttons & (BT_CROUCH | BT_MOVEDOWN))
						poff[PlayerNumber()] = -0.125;
					else
						poff[PlayerNumber()] = 0;
				}
				else if (buttons & (BT_JUMP | BT_MOVEUP))
				{
					poff[PlayerNumber()] = 0.25;
					nooff[PlayerNumber()] = FALSE;
				}
				else if (buttons & (BT_CROUCH | BT_MOVEDOWN))
				{
					poff[PlayerNumber()] = -0.25;
					nooff[PlayerNumber()] = FALSE;
				}
				else
					nooff[PlayerNumber()] = TRUE;
				
				if(GetActorVelZ(0) < 0) SetActorVelocity(0, 0, 0, -0.4, 0, 0);
				else SetActorVelocity(0, 0, 0, 0, 0, 0);
				
				GiveInventory("ShootSparkles", 1);
			}
			else if(count > 8)
			{
				if(count == 12)
				{
					SetPlayerProperty(0, 1, PROP_TOTALLYFROZEN);
					SetActorProperty(0, APROP_Gravity, 0.0);
					GiveInventory("ShootSparkles3", 1);
					GiveInventory("ShootSparkles2", 1);
				}
				if (!nooff[PlayerNumber()]) SetActorVelocity(0, FixedMul(cos(poff[PlayerNumber()]), 64 * cos(GetActorAngle(0) + aoff[PlayerNumber()])),
				FixedMul(cos(poff[PlayerNumber()]), 64 * sin(GetActorAngle(0) + aoff[PlayerNumber()])), sin(poff[PlayerNumber()]) * 64, 0, 0);
			}
			else
			{
				if(count == 8)
				{
					SetActorVelocity(0, velx, vely, velz, 0, 0);
					SetPlayerProperty(0, 0, PROP_TOTALLYFROZEN);
					SetPlayerProperty(0, 0, PROP_FROZEN);
					//SpawnSpot("TeleportFog", 0, 0, 0);
				}
				
				if(count == 2)
				{
					SetActorProperty(0, APROP_Gravity, 1.0);
					GiveInventory("SpectralOFF", 1);
				}
				
				if(count == 1)
				{
					cooldown = 23;
				}
				
				SetActorProperty(0, APROP_Alpha, GetActorProperty(0, APROP_Alpha) + 0.125);
			}
			count--;
		}
		if(cooldown > 0)
		{
			cooldown--;
			if(cooldown == 0) count = -1;
		}
		Delay(1);
	}
}

script "Get Offset" (int t)
{
	int r;
	
	switch(t)
	{
		case 0:
			r = nooff[PlayerNumber()];
			break;
		case 1:
			r = (aoff[PlayerNumber()] * 360) >> 16;
			break;
		case 2:
			r = (poff[PlayerNumber()] * 360) >> 16;
			break;
	}
	SetResultValue(r);
}